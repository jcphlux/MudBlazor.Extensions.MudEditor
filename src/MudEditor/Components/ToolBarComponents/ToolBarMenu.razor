@using MudBlazor.Utilities
@inherits ToolBarBase
@namespace MudBlazor.Extensions.ToolBarComponents

<MudMenu AnchorOrigin="Origin.BottomLeft" Class="@Classname" Color="@(Active? Editor.ToolBarActiveColor: Editor.ToolBarColor)" Dense="true" Icon="@_selectedAction.Icon" PopoverClass="@Classname" Size="Size.Small" Variant="@Editor.ToolBarVariant">
    @foreach (var action in Action.Actions) {
        <MudMenuItem  OnClick="@(() => ItemSelected(action))">
            <MudIcon Color="@(_selectedAction.AttribValue==action.AttribValue? Editor.ToolBarActiveColor: Editor.ToolBarColor)" Icon="@action.Icon" Size="Size.Small" Title="@action.Label"></MudIcon>
        </MudMenuItem>
    }
</MudMenu>

@code {
    private string Classname => new CssBuilder()
        .AddClass("mud-editor-toolbar-menu")
        .AddClass("pa-0")
        .AddClass("ma-0")
        .Build();

    protected ToolBarAction _selectedAction = null!;

    protected async void ItemSelected(ToolBarAction action) {
        await Editor.SetAttrib(action.Command, action.Attrib, Value == action.AttribValue ? null : action.AttribValue);
    }

    protected override void OnValueChanged() {
        _selectedAction = Value == null ? 
            Action.Actions.FirstOrDefault(o => o.AttribValue == null, Action.Actions[0]) : 
            Action.Actions.First(o=> Value!.Equals(o.AttribValue));
    }
}