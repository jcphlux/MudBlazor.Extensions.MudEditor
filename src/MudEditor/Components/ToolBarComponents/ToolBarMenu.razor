@using MudBlazor.Utilities
@inherits ToolBarBase
@namespace MudBlazor.Extensions.ToolBarComponents

<MudMenu Dense="true" Class="@Classname" PopoverClass="@Classname" AnchorOrigin="Origin.BottomLeft">
    <ActivatorContent>
        <MudIconButton Variant="Variant.Outlined" Color="@(Active? ActiveColor: Color)" Icon="@_selectedOption.Icon" Size="Size.Small" Title="@_selectedOption.Label" ></MudIconButton>
    </ActivatorContent>
    <ChildContent>
    @foreach (var option in Option.Options) {
        <MudMenuItem  OnClick="@(() => ItemSelected(option))">
            <MudIcon Icon="@option.Icon" Color="@Editor.ToolBarColor" Size="Size.Small"></MudIcon>
        </MudMenuItem>
    }
    </ChildContent>
</MudMenu>

@code {
    private string Classname => new CssBuilder()
        .AddClass("mud-editor-toolbar-menu")
        .AddClass("pa-0")
        .AddClass("ma-0")
        .Build();

    private ToolBarOption _selectedOption = null!;

    private async void ItemSelected(ToolBarOption option) {
        await Editor.SetFormat(Option.Attrib, Value == option.AttribValue ? null : option.AttribValue);
    }

    protected override void OnValueChanged() {
        _selectedOption = Value == null ? 
            Option.Options.FirstOrDefault(o => o.AttribValue == null, Option.Options[0]) : 
            Option.Options.First(o=> Value!.Equals(o.AttribValue));
    }
}